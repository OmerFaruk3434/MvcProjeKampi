@using EntityLayer.Concrete
@using PagedList;
@using PagedList.Mvc;
@model IPagedList<Content>
@{
    ViewBag.Title = "Tüm İçerikler";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<br />
<body class="hold-transition sidebar-mini layout-fixed">
    @using (Html.BeginForm("GetAllContent", "Content", FormMethod.Get, new { @class = "search-form" }))
    {
        <div class="search-container content container-fluid">
            <form class="search-form" action="@Url.Action("GetAllContent", "Content")" method="get">
                <div class="row">
                    <div class="col-12">
                        <div class="input-group stylish-input-group">
                            <input style=" border: 2px solid #79b8c9; border-radius: 15px; padding: 5px;" type="text" class="form-control" placeholder="Ara..." name="p">
                            <button style="border: 2px; border-radius:12px;padding: 8px;" type="submit">
                                <span class="fa fa-search"></span>
                            </button>
                        </div>
                    </div>
                </div>
            </form>
        </div><br />
        <section class="content">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-12">
                        <div class="card card-line-primary">
                            <div class="card-body">
                                @if (Model.Count == 0)
                                {
                                    <div class="col-sm-12 container badge badge-dark">
                                        <h1>Bulunamadı</h1>
                                    </div>
                                }
                                <div class="timeline">
                                    @foreach (var item in Model.OrderByDescending(x => x.ContentDate))
                                    {
                                        <div class="time-label">
                                            <span class="bg-purple">@(((DateTime)item.ContentDate).ToString("dd MMM yyyy"))</span>
                                            <span class="bg-orange">@item.Heading.Category.CategoryName</span>
                                        </div>
                                        <div>
                                            <img style=" border-radius: 100%; height: 60px; width: 60px; object-fit: cover;" alt="Avatar"
                                                 class="table-avatar" src="@item.Writer.WriterImage">&nbsp;&nbsp;
                                            <div class="timeline-item">
                                                @if (item.Writer.WriterGender == true)
                                                {
                                                    <h3 style="color:blue" class="timeline-header"><a>@item.Writer.WriterName @item.Writer.WriterSurName</a></h3>
                                                }
                                                else
                                                {
                                                    <h3 style="color:deeppink" class="timeline-header"><a>@item.Writer.WriterName @item.Writer.WriterSurName</a></h3>
                                                }
                                                <div class="timeline-body">
                                                    @item.ContentValue
                                                </div>
                                            </div>
                                        </div><br />
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </section>
        <div style="display: flex; justify-content: center; margin-top: 7px;">
            @Html.PagedListPager((IPagedList)Model, p => Url.Action("GetAllList", new { p }), new PagedListRenderOptions
               {
                   LiElementClasses = new List<string>
                   { "page-item"}
               })
        </div>
    }
</body>
